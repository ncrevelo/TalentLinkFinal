rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección 'role' - almacena información básica del usuario
    match /role/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para la colección 'user' - perfiles de actores
    match /user/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Permitir lectura a usuarios autenticados para búsquedas
      allow read: if request.auth != null;
    }
    
    // Reglas para la colección 'hirer' - perfiles de contratantes
    match /hirer/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Permitir lectura a usuarios autenticados
      allow read: if request.auth != null;
    }
    
    // Reglas para la colección 'admin' - perfiles de administradores
    match /admin/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Reglas para la colección 'jobs' - ofertas de trabajo
    match /jobs/{jobId} {
      // Solo contratantes autenticados pueden crear trabajos
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/hirer/$(request.auth.uid)) &&
        request.auth.uid == request.resource.data.createdBy;
      
      // El creador puede leer, actualizar y eliminar sus trabajos
      allow read, update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // Usuarios autenticados pueden leer trabajos activos y no eliminados
      allow read: if request.auth != null && 
        resource.data.isActive == true && 
        resource.data.isDeleted == false;
    }

    // Reglas para la colección 'deletedJobs' - trabajos eliminados (archivo)
    match /deletedJobs/{deletedJobId} {
      // Solo el usuario que eliminó el trabajo puede leer y escribir
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.deletedBy;
      
      // Permitir creación solo si el usuario es el que está eliminando
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.deletedBy;
    }

    // Reglas para estadísticas de trabajos
    match /jobStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para otras colecciones futuras
    match /projects/{projectId} {
      // Solo contratantes pueden crear proyectos
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/hirer/$(request.auth.uid));
      // El creador puede leer/escribir su proyecto
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      // Usuarios autenticados pueden leer proyectos públicos
      allow read: if request.auth != null && resource.data.isPublic == true;
    }
    
    // Reglas para aplicaciones a proyectos
    match /applications/{applicationId} {
      // Solo actores pueden crear aplicaciones
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/user/$(request.auth.uid));
      // El aplicante puede leer/escribir su aplicación
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.applicantId;
      // El contratante del proyecto puede leer aplicaciones
      allow read: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.createdBy;
    }
  }
}
